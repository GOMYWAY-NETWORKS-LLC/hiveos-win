#!/usr/bin/env bash

THIS_MINER_NAME="xmrig"
[ -t 1 ] && . colors


[[ `ps aux | grep "./xmrig " | grep -v grep | wc -l` != 0 ]] &&
	echo -e "${RED}$THIS_MINER_NAME miner is already running${NOCOLOR}" &&
	exit 1




function config_gen() {
	RIG_CONF="/hive-config/rig.conf"
	WALLET_CONF="/hive-config/wallet.conf"
	MINER_CONFIG="/hive/$THIS_MINER_NAME/config.json"

	[ ! -f $RIG_CONF ] && echo -e "${RED}No rig config $RIG_CONF${NOCOLOR}" && return 1
	[ ! -f $WALLET_CONF ] && echo -e "${RED}No wallet config $WALLET_CONF${NOCOLOR}" && return 1

	. $RIG_CONF
	. $WALLET_CONF

	conf=`cat /hive/$THIS_MINER_NAME/config_global.json`
	userconf='{}'
	#merge user config options into main config
	if [[ ! -z $XMRIG_USER_CONFIG ]]; then
		while read -r line; do
			[[ -z $line ]] && continue
			conf=$(jq -s '.[0] * .[1]' <<< "$conf {$line}")
		done <<< "$XMRIG_USER_CONFIG"
	fi

	pools='[]'
	for url in $XMRIG_URL; do
		grep -q "nicehash.com" <<< $XMRIG_URL
		[[ $? -eq 0 ]] && nicehash="true" || nicehash="false"
		pool=$(cat <<EOF
			{"url": "$url", "user": "$XMRIG_TEMPLATE", "pass": "$XMRIG_PASS", "use_nicehash": $nicehash, "keepalive": true }
EOF
)
		pools=`jq --null-input --argjson pools "$pools" --argjson pool "$pool" '$pools + [$pool]'`
	done

	if [[ -z $pools || $pools == '[]' || $pools == 'null' ]]; then
		echo -e "${RED}No pools configured, using default${NOCOLOR}"
	else
		#pass can also contain %var%
		[[ -z $EWAL && -z $ZWAL && -z $DWAL ]] && echo -e "${RED}No WAL address is set${NOCOLOR}"
		[[ ! -z $EWAL ]] && pools=$(sed "s/%EWAL%/$EWAL/g" <<< $pools) #|| echo "${RED}EWAL not set${NOCOLOR}"
		[[ ! -z $DWAL ]] && pools=$(sed "s/%DWAL%/$DWAL/g" <<< $pools) #|| echo "${RED}DWAL not set${NOCOLOR}"
		[[ ! -z $ZWAL ]] && pools=$(sed "s/%ZWAL%/$ZWAL/g" <<< $pools) #|| echo "${RED}ZWAL not set${NOCOLOR}"
		[[ ! -z $EMAIL ]] && pools=$(sed "s/%EMAIL%/$EMAIL/g" <<< $pools)
		[[ ! -z $WORKER_NAME ]] && pools=$(sed "s/%WORKER_NAME%/$WORKER_NAME/g" <<< $pools) #|| echo "${RED}WORKER_NAME not set${NOCOLOR}"

		pools=`jq --null-input --argjson pools "$pools" '{"pools": $pools}'`
		conf=$(jq -s '.[0] * .[1]' <<< "$conf $pools")
	fi


	echo $conf | jq . > $MINER_CONFIG
}


config_gen


cd /hive/$THIS_MINER_NAME
while true
do
	miner logrotate $THIS_MINER_NAME
	/hive/$THIS_MINER_NAME/xmrig.sh
	echo ""
	echo -e "${YELLOW}$THIS_MINER_NAME exited, waiting to cooldown a bit${NOCOLOR}"
	echo ""
	sleep 3
done
